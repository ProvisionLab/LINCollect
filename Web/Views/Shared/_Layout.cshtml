<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - LINCollect</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style>
        .slider {
            width: 100% !important;
        }
    </style>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="@Url.Action("Index", "Home")"><img src="~/Content/img/logo.png" alt="LINCOllect" title="LINCollect" class="logo" /></a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (Request.IsAuthenticated)
                    {
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>
                        <li>@Html.ActionLink("Survey", "Index", "Surveys")</li>
                        <li>@Html.ActionLink("Interviewers", "Index", "Interviewer")</li>
                    }
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        <br />
        <br />
        <br />
        @RenderBody()
        <hr />
        <footer class="text-right">
            <p>&copy; @DateTime.Now.Year - LINCollect</p>
        </footer>
        <div class="scroll-to-top">
            <span class="fa-stack fa-lg">
                <i class="fa fa-circle-thin fa-stack-2x fa-inverse"></i>
                <i class="fa fa-arrow-up fa-stack-1x fa-inverse"></i>
            </span>
        </div>
    </div>
    <img src="@Url.Content("~/Content/img/giphy.gif")" id="loader" style="display:none;" />
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/ckeditor/adapters/jquery.js"></script>
    @RenderSection("scripts", required: false)
    <script type="text/javascript">
        function Redirect(url) {
            var ua = navigator.userAgent.toLowerCase(),
                isIE = ua.indexOf('msie') !== -1,
                version = parseInt(ua.substr(4, 2), 10);

            // Internet Explorer 8 and lower
            if (isIE && version < 9) {
                var link = document.createElement('a');
                link.href = url;
                document.body.appendChild(link);
                link.click();
            }

                // All other browsers
            else { window.location.href = url; }
        };
        function deleteSurvay(id, name) {
            if (confirm('Delete Survey "' + name + '"')) {
                Redirect('/Surveys/Delete/' + id);
            }
        };
        function ShowLoader() {
            $('#loader').show();
        };
        function HideLoader() {
            $('#loader').hide();
        };
        function qtrup(row) {
            var index = row.parents('tbody').find('tr').index(row);
            row.find('input').each(function (i, item) {
                $(item).attr('name', $(item).attr('name').replace(/\[.*\]/, '[' + (index - 1) + ']'));
                if ($(item).attr('name').indexOf('.OrderId') !== -1) {
                    $(item).val(index - 1);
                }
            });
            row.prev().find('input').each(function (i, item) {
                $(item).attr('name', $(item).attr('name').replace(/\[.*\]/, '[' + (index) + ']'));
                if ($(item).attr('name').indexOf('.OrderId') !== -1) {
                    $(item).val(index);
                }
            });
            row.insertBefore(row.prev());
        }
        function qrup(el) {
            var row = $(el).closest('tr');
            if (row.prev().length > 0) {
                qtrup(row);
            }
        };
        function qtrdown(row) {
            var index = row.parents('tbody').find('tr').index(row);
            row.find('input').each(function (i, item) {
                $(item).attr('name', $(item).attr('name').replace(/\[.*\]/, '[' + (index + 1) + ']'));
                if ($(item).attr('name').indexOf('.OrderId') !== -1) {
                    $(item).val(index + 1);
                }
            });
            row.next().find('input').each(function (i, item) {
                $(item).attr('name', $(item).attr('name').replace(/\[.*\]/, '[' + (index) + ']'));
                if ($(item).attr('name').indexOf('.OrderId') !== -1) {
                    $(item).val(index);
                }
            });
            row.insertAfter(row.next());
        }
        function qrdown(el) {
            var row = $(el).closest('tr');
            if (row.next().length > 0) {
                qtrdown(row);
            }
        };
        function updateAnswer() {
            $('.formats *[data-format]').each(function () {
                if (!$(this).hasClass('hidden')) {
                    $(this).addClass('hidden');
                }
                if ($(this).attr('data-format').indexOf($('input[name="QuestionFormat.Code"]:checked').val()) != -1) {
                    $(this).removeClass('hidden');
                }
            });
        }
        function addAnswerRow(btn) {
            var index = $(btn).parents('table.answers-table').find('tbody > tr').length;
            $(btn).parents('table.answers-table').find('tbody').append($('<tr><td><input type="text" name="Answers[' + index + '].Text" class="form-control" required="required" /></td><td><input type="text" name="Answers[' + index + '].Value" class="form-control" required="required" /></td><td><input type="checkbox" onchange="changeCb(this);" value="true" name="Answers[' + index + '].IsDefault" /></td><td class="text-right"><a href="javascript:void(0);" onclick="qrup(this)">up</a>&nbsp;<a href="javascript:void(0);" onclick="qrdown(this)">down</a>&nbsp;<a href="#" onclick="removeRow(this);">delete</a></td></tr>'));
        }
        function addRowsRow(btn) {
            $(btn).parents('table.rows').find('tbody').append($('<tr><td style="width:90%"><input type="text" name="Answer.Rows" class="form-control" required="required"></td><td class="text-right"><a href="#" onclick="removeRow(this)">delete</a></td></tr>'));
        }

        function changeCb(cb) {
            if ($(cb).prop('checked')) {
                $('.answers-table input[type="checkbox"]').prop('checked', false);
                $(cb).prop('checked', true);
            }
        }
        function removeRow(btn) {
            var row = $(btn).parents('tr');
            if (row.next().length > 0) {
                while (row.next().length > 0) {
                    qtrup(row.next());
                }
            }
            row.remove();
        }

        function updateCkeditor() {
            var instance = CKEDITOR.instances["Text"];
            if (instance) {
                CKEDITOR.remove(instance);
            }
            CKEDITOR.replace("Text");

            instance = CKEDITOR.instances["Introducing"];
            if (instance) {
                CKEDITOR.remove(instance);
            }
            CKEDITOR.replace("Introducing");
        }

        $(document).ready(function () {
            var sliders = $('div[id*="slider"]');
            if (sliders.length) {
                sliders.slider()
                    .on('slide',
                        function (value) {
                            var name = $(value.currentTarget).attr('name');
                            var names = name.substring(0, name.lastIndexOf('.')) + '.Values[0]';
                            $("input[name=\'" + names + "\']").val(value.value);
                        });
            }
        });

        function addQuestion() {
            var form = $('#question-options');
            var elements = form.find('input[required]:visible, textarea:hidden');
            if (elements.valid()) {
                ShowLoader();
                form.submit();
            }
        }

        function editQuestionSubmit() {
            var form = $('#question-options-edit');
            var elements = form.find('input[required]:visible, textarea:hidden');
            if (elements.valid()) {
                ShowLoader();
                form.submit();
            }
        }

        $(document).ready(function () {
            //On modal hide
            $('.modal').on('hidden.bs.modal', function () {
                clearInput();
            });

            //On modal show
            $('.modal').on('shown.bs.modal', function () {
                var createForm = $('#addQuestionModal #question-options');
                var editForm = $('#editQuestionModal #question-options-edit');
                var validator = null;
                if (createForm.find('div').length) {
                    validator = initValidator(createForm);
                }
                if (editForm.find('div').length) {
                    validator = initValidator(editForm);
                }
                $.each(CKEDITOR.instances, function (instance) {
                    CKEDITOR.instances[instance].on('change', function () {
                        CKEDITOR.instances[instance].updateElement();
                        validator.element("#" + instance);
                    });
                });
            });
           
        });

        function initValidator(form) {
            var validator = form.validate({
                ignore: 'input:hidden',
                errorPlacement: function (error, $elem) {
                    error = error.css('color', 'red');
                    if ($elem.is('.slider-input')) {
                        var container = null;
                        if ($elem.next().is('span')) {
                            container = $elem.parents('div').find('div.col-xs-6.min');
                        } else {
                            container = $elem.parents('div').find('div.col-xs-6.max');
                        }
                        container.html(error);
                    }
                    else if ($elem.is('textarea')) {
                        var next = $elem.next();
                        next.after(error);
                    } else if ($elem.is(':radio')) {
                        var errorContainer = $elem.closest('div.col-md-12').next();
                        if (!errorContainer.length) {
                            $elem.closest('div.row').after($('<div>').addClass('col-md-12 error').append(error));
                        } else {
                            errorContainer.html(error);
                        }
                    } else {
                        $elem.after(error);
                    }
                }
            });

            form.find('textarea:required').each(function (index, element) {
                $(element).rules('add',
                {
                    required: function () {
                        CKEDITOR.instances[element.attr('name')].updateElement();
                        return true;
                    }
                });
            });
            return validator;
        }

        function sucessQuestion(data) {
            if (data.success) {
                location.reload();
            }
        }
        function clearInput() {
            $('#editQuestionModal #question-options-edit').empty();
            $('#addQuestionModal #question-options').empty();
            var modals = $('.tab-pane.active .modal');
            if (modals.length) {
                modals.each(function (index, element) {
                    $(element).find('.modal-body').empty();
                });
            }
        }
    </script>
</body>
</html>
