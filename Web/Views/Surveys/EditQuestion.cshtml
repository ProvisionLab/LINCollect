@model Web.Models.DTO.QuestionModel

@Html.HiddenFor(m => m.RespondentId)
@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.OrderId)
@Html.HiddenFor(m => m.IsAfterSurvey)
<div class="form-horizontal">
    <div class="form-group">
        <span class="control-label col-md-12">Introduction (optional)</span>
        <div class="col-md-12">
            @Html.TextAreaFor(m => m.Introducing, new { @class = "form-control ckeditor", style = "height: 200px", required="required" })
            <small>Text instructing your respondent to give an answer.</small>
        </div>
    </div>
    <div class="form-group">
        <span class="control-label col-md-12">* Question</span>
        <div class="col-md-12">
            @Html.TextAreaFor(m => m.Text, new { @class = "form-control ckeditor required", style = "height: 200px", required = "required" })
            <small>Text instructing your respondent to give an answer.</small>
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-12">* Short Name</span>
        <div class="col-md-12">
            @Html.TextBoxFor(m => m.ShortName, new { @class = "form-control", required = "required" })
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-12">Properties</span>
        <div class="col-md-12">
            <label>
                @Html.CheckBoxFor(m => m.IsCompulsory)
                Compulsory
            </label>
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-12 format-group-section">* Format</span>
        <div class="row">
            <div class="col-md-12">
                @foreach (var item in (List<Web.Data.QuestionFormat>)ViewBag.Formats)
                {
                    <div class="col-sm-4">
                        <label>
                            @if (Model.QuestionFormat?.Code == item.Code)
                            {
                                @Html.RadioButtonFor(m => m.QuestionFormat.Code, item.Code, new { @checked = "true", onchange = $"updateAnswer('{item.Code}')", required = "required" });
                            }
                            else
                            {
                                @Html.RadioButtonFor(m => m.QuestionFormat.Code, item.Code, new { onchange = $"updateAnswer('{item.Code}')", required="required" })
                            }
                            @item.Name
                        </label>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="form-group formats">
        <div class="col-md-12">
            <div data-format="text" class="hidden">
                <label>* Rows:</label>
                @Html.TextBoxFor(m => m.TextRowsCount, new { min = "1", step = "1", max = "9", required = "required", @class = "form-control", type = "number" })
            </div>
            <div data-format="choice_across,choice_down,drop_down,matrix" class="hidden">
                <div data-format="choice_across" class="hidden">
                    Include annotation:
                    @Html.CheckBox("IsAnnotation", Model.IsAnnotation)
                    <br />
                </div>
                <div data-format="matrix" class="hidden">
                    <b>Rows:</b> These questions are displayed down the left hand side.
                    <table class="table rows">
                        <tbody>
                        
                        @{ var rows = Model.Rows.Split(',');}
                        @for (int i = 0; i < rows.Length; i++)
                        {
                            <tr>
                                <td style="width: 90%"><input id="row-@i" type="text" value="@rows[i]" name="Answer.Rows" class="form-control" required="required"></td>
                                <td class="text-right"><a href="#" onclick="removeRow(this)" tabindex="-1">delete</a></td>
                            </tr>
                        }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="2" class="text-right">
                                    <a href="#" onclick="addRowsRow(this);" tabindex="-1">add row</a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                    <b>Columns:</b> These choices are displayed across the page.
                </div>
                <small>
                    <b>Important:</b> The "Text for user" field is the text respondents will see. The 'coding' field is the data which is exported.
                </small>
                <table class="table answers-table">
                    <thead>
                        <tr>
                            <th>Text for user</th>
                            <th>Coding</th>
                            <th>Default</th>
                            <th class="text-right">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Answers.Count; i++)
                        {
                            <tr>
                                @Html.Hidden($"Answers[{i}].OrderId", Model.Answers[i].OrderId)
                                <td>
                                    @Html.TextBox($"Answers[{i}].Text", Model.Answers[i].Text, new { @class = "form-control", required="required" })
                                </td>
                                <td>
                                    @Html.TextBox($"Answers[{i}].Value", Model.Answers[i].Value, new { @class = "form-control", required = "required" })
                                </td>
                                <td>
                                    @Html.CheckBox($"Answers[{i}].IsDefault", Model.Answers[i].IsDefault, new { onchange = "changeCb(this);" })
                                </td>
                                <td class="text-right"><a href="javascript:void(0);" onclick="qrup(this)" tabindex="-1">up</a>&nbsp;<a href="javascript:void(0);" onclick="qrdown(this)" tabindex="-1">down</a>&nbsp;<a href="#" onclick="removeRow(this);" tabindex="-1">delete</a></td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="4" class="text-right">
                                <a href="#" onclick="addAnswerRow(this);" tabindex="-1">add row</a>
                            </td>
                        </tr>
                    </tfoot>
                </table>
                <div data-format="choice_across,choice_down" class="hidden">
                    Allow multiple values:
                    <label>
                        @if (Model.IsMultiple)
                        {
                            @Html.RadioButtonFor(m => m.IsMultiple, "true", new { @checked = "checked" })
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.IsMultiple, "true")
                        }
                        Yes
                    </label>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <label>
                        @if (!Model.IsMultiple)
                        {
                            @Html.RadioButtonFor(m => m.IsMultiple, "false", new { @checked = "checked" })
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.IsMultiple, "false")
                        }
                        No
                    </label>
                </div>
            </div>
            <div data-format="slider" class="hidden">
                <label>* Extreme points:</label><br />
                @Html.TextBoxFor(m => m.TextMin, new { @class = "form-control" })
                <small>Appears to left of slider</small><br />
                @Html.TextBoxFor(m => m.TextMax, new { @class = "form-control" })
                <small>Appears to right  of slider</small><br /><br />
                <div>
                    <label>* Values:</label><br />
                    @Html.TextBoxFor(m => m.ValueMin, new { @class = "form-control slider-input", style = "display: inline-block; width:49%", required = "required" })<span style="width:2%">-</span>@Html.TextBoxFor(m => m.ValueMax, new { @class = "form-control slider-input", style = "display: inline-block; width:49%", required = "required" })
                    <div class="col-xs-6 min"></div>
                    <div class="col-xs-6 max"></div>
                    <small class="text-center" style="width: 100%;display: inline-block;">Miniumum and maximum values for slider</small>
                </div>
                <br /><br />
                <label>* Resolution:</label><br />
                @Html.TextBoxFor(m => m.Resolution, new { @class = "form-control", required="required" })
                <small class="text-center" style="width: 100%;display: inline-block;">The step value. e.g. 0.5 will allow 1, 1.5, 2, 2.5 etc</small><br /><br />
                <label>Show Value:</label>
                @Html.CheckBoxFor(m => m.IsShowValue)
                <br />
                <small>Show user the value of the slider</small>
            </div>
        </div>
    </div>
</div>
